/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Left-hand home row mods
#define GUI_A  &mt LGUI  A
#define ALT_S  &mt RALT  S
#define CTRL_D &mt LCTRL D
#define SHFT_F &mt LSHFT F

// Right-hand home row mods
#define SHFT_J   &mt RSHFT J
#define CTRL_K   &mt RCTRL K
#define ALT_L    &mt RALT  L
#define GUI_SEMI &mt RGUI  SEMI

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &none      &kp Q &kp W &kp E  &kp R  &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSLH
   &caps_word GUI_A ALT_S CTRL_D SHFT_F &kp G   &kp H SHFT_J CTRL_K    ALT_L   GUI_SEMI &none
   &none      &kp Z &kp X &kp C  &kp V  &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &none
                  &kp BSPC &mo 1 &kp SPACE   &kp RET &mo 2 &kp ESC
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &none       &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &none
   &none       &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &none  &none
   &none       &out OUT_TOG &none        &none        &none        &none          &none    &none    &none  &none     &none  &none
                          	        &trans       &trans       &trans         &trans   &trans   &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &none      &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &none
   &none      &none    &none  &none    &none    &none       &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &none
   &none      &none    &none  &none    &none    &none       &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &none
                    	     &trans   &trans   &kp UNDER      &trans   &trans    &trans
                        >;
                };
        };
};
